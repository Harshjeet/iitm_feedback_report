
services:
  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery:
    build: .
    command: bash -c "cd /app && PYTHONPATH=/app celery -A core worker --loglevel=info"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery-beat:
    build: .
    command: bash -c "cd /app && PYTHONPATH=/app celery -A core beat --loglevel=info"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: unless-stopped

  flower:
    build: .
    command: bash -c "cd /app && PYTHONPATH=/app celery -A core flower --port=5555"
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5433:5432"  # Changed host port to 5433 to avoid conflict with local PostgreSQL
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
